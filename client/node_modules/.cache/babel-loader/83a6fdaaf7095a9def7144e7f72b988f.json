{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Commander Jordan\\\\springs-delta\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Bootstrap CSS\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Bootstrap Bundle JS\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport './custom.scss';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./components/Home\";\nimport Loading from './components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // initiate loading state for loading the page\n  const [loading, setLoading] = React.useState(true); // initiate hotspringdata as an array\n\n  const [allHotSpringData, setAllHotSpringData] = React.useState(); // initiate  HotSpring data object, which will be used to store the api data into a more\n  // managable object/state\n\n  let [HotSpringDataObject, setHotSpringDataObject] = React.useState({\n    id: null,\n    name: '',\n    lat: '',\n    long: '',\n    description: '',\n    state: '',\n    area: '',\n    googleLink: '',\n    image: '',\n    dayUseFee: '',\n    overnightFacilities: '',\n    open: '',\n    roadAccess: '',\n    website: '',\n    resort: '',\n    loc: {},\n    nospacename: ''\n  });\n  let [allHotSpringNames, setAllHotSpringNames] = React.useState([]);\n\n  const fetchHotSpring = async () => {\n    try {\n      // here we use promise all to promise the entire array rawHotSpringAPIData\n      // set the state AllHotSpringData using the function\n      const allHotSpringData = await Promise(fetch('http://localhost:5000/hotspringdbinfo').then(res => res.json()));\n      setAllHotSpringData(allHotSpringData);\n      const allHotSpringDataNames = allHotSpringData.map((thing, index) => ({\n        id: index,\n        name: thing.name\n      }));\n      setAllHotSpringNames(allHotSpringDataNames); // turn off loading compnenet\n\n      setLoading(false); // console.log(allHotSpringData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchHotSpring();\n  }, []); //   loading true, make loading comp run\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"boxed\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ctcqyjTLUNJ/tFnfsJZovWCVVxA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Navbar","Footer","Home","Loading","App","loading","setLoading","useState","allHotSpringData","setAllHotSpringData","HotSpringDataObject","setHotSpringDataObject","id","name","lat","long","description","state","area","googleLink","image","dayUseFee","overnightFacilities","open","roadAccess","website","resort","loc","nospacename","allHotSpringNames","setAllHotSpringNames","fetchHotSpring","Promise","fetch","then","res","json","allHotSpringDataNames","map","thing","index","error","console","log","useEffect"],"sources":["C:/Users/Commander Jordan/springs-delta/client/src/App.js"],"sourcesContent":["import React from \"react\"\n// Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Bootstrap Bundle JS\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport './custom.scss';\nimport { BrowserRouter} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./components/Home\";\nimport Loading from './components/Loading'\n\n\nexport default function App() {\n\n      // initiate loading state for loading the page\n      const [loading, setLoading] = React.useState(true);\n\n      // initiate hotspringdata as an array\n      const [allHotSpringData, setAllHotSpringData] = React.useState();\n\n      // initiate  HotSpring data object, which will be used to store the api data into a more\n      // managable object/state\n      let[HotSpringDataObject, setHotSpringDataObject] = React.useState({\n        id: null,\n        name: '',\n        lat: '',\n        long: '',\n        description: '',\n        state: '',\n        area: '',\n        googleLink: '',\n        image: '',\n        dayUseFee: '',\n        overnightFacilities: '',\n        open: '',\n        roadAccess: '',\n        website: '',\n        resort: '',\n        loc:{},\n        nospacename: ''\n    })\n\n    let [allHotSpringNames, setAllHotSpringNames] = React.useState([])\n\n\n\n    const fetchHotSpring = async () => {\n      try{\n          // here we use promise all to promise the entire array rawHotSpringAPIData\n          // set the state AllHotSpringData using the function\n          const allHotSpringData = await Promise(\n              fetch('http://localhost:5000/hotspringdbinfo').then((res) => res.json()))           \n              \n\n          setAllHotSpringData(allHotSpringData)\n\n          const allHotSpringDataNames = \n          allHotSpringData.map((thing, index) => ({ id: index, name: thing.name}))                           \n              setAllHotSpringNames(allHotSpringDataNames); \n          // turn off loading compnenet\n          setLoading(false);\n          // console.log(allHotSpringData);\n      }   catch (error) {\n          console.log(error);\n      }\n  }\n\n  React.useEffect(() => {\n      fetchHotSpring();\n    }, []);\n  //   loading true, make loading comp run\n  if (loading) {\n  return <Loading />;\n  }\n  \n\n\n\n\n\n\n\n  return (\n    <BrowserRouter>\n    <div>\n    \n    <body className=\"boxed\">\n    <div className=\"body\">\n      \n      <Navbar/>\n      <Home />\n      <Footer />\n      \n    </div>\n    </body>\n    </div>\n    </BrowserRouter>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}